renverser([],[]).
renverser([T|Q],R):-renverser(Q,QR), concat(QR,[T], R).
nieme(1,[X|_],X) :- !.
nieme(N,[_|R],X) :- N1 is N-1, nieme(N1,R,X).


afficheplateau(P1,P2):- write(P2), nl, write(P1), nl.
afficheplateau(P2,P1):- renverser(P2, NP2), write(NP2), nl, write(P1), nl.
nombreGrainesDansCase(Case,PJ1, NBGraines):- nieme(Case,PJ1, NBGraines).
siPremiereDistributionPossible(J1, J2, PJ1, PJ2, PJ1Fin, PJ2Fin, Case, NBGrainesCase, GrainesRamassees):- PJ2 \= [0,0,0,0,0,0].
siPremiereDistributionPossible(J1, J2, PJ1, PJ2, PJ1Fin, PJ2Fin, Case, NBGrainesCase, GrainesRamassees):- nombreGrainesDansCase(Case,PJ1, NBGrainesCase), 6-Case < NBGrainesCase.

ajouterUneGraineCase(Case,[],[], NumCase). 
ajouterUneGraineCase(Case,[H|T],[X|Y], NumCase):- 
								N is NumCase +1,
								N= Case,
								ajouterUneGraineCase(Case,T,Y, N),
								X is H+1.
ajouterUneGraineCase(Case,[H|T],[H|Y], NumCase):-  N is NumCase +1, N \= Case,
								ajouterUneGraineCase(Case,T,Y, N).
								
								
%ici commence la partie Distribuer plateau & calculer le nombre de graines ramassées%
concat([], L, L).
concat([T|Q], L, [T|R]):- concat(Q,L,R).
renverser([],[]).
renverser([T|Q],R):-renverser(Q,QR), concat(QR,[T], R).
nieme(1,[X|_],X) :- !.
nieme(N,[_|R],X) :- N1 is N-1, nieme(N1,R,X). %N : le numéro de la case, deuxième argument : liste à tranmettre, X : le résultat 

distribuerSurPlateau(0, Case, NBGrainesCase, PJ1, PJ1, CaseArrivee, Nbr):- NBGrainesCase == 0, CaseArrivee is Case, Nbr is NBGrainesCase, !.

distribuerSurPlateau(0, Case, NBGrainesCase, [], [], CaseArrivee,NBGrainesRestantes ):- CaseArrivee is -99, NBGrainesRestantes = NBGrainesCase.


distribuerSurPlateau(0, Case, NBGrainesCase, [T|Q], [T1|Q1], CaseArrivee, NBGrainesRestantes):- Case > 1,
Case2 is Case-1,
T1 is T,
distribuerSurPlateau(0, Case2, NBGrainesCase, Q, Q1, CaseArrivee, NBGrainesRestantes).
distribuerSurPlateau(0, Case, NBGrainesCase, [T|Q], [T1|Q1], CaseArrivee, NBGrainesRestantes):- Case = 1,
T1 is 0,
Case2 is Case-1,
distribuerSurPlateau(0, Case2, T, Q, Q1, CaseArrivee, NBGrainesRestantes).
distribuerSurPlateau(0, Case, NBGrainesCase, [T|Q], [T1|Q1], CaseArrivee, NBGrainesRestantes):- Case < 1,
																								T1 is T+1,
																								N is NBGrainesCase -1,
																								Case2 is Case-1,
																								distribuerSurPlateau(0, Case2, N, Q, Q1, CaseArrivee, NBGrainesRestantes).



distribuerSurPlateau(1, Case, NBGrainesCase, [], [], CaseArrivee,NBGrainesRestantes ):-CaseArrivee \=1, CaseArrivee is -99, NBGrainesRestantes = NBGrainesCase, !.
distribuerSurPlateau(1, Case, -1, PJ1, PJ1, CaseArrivee, Nbr) :- renverser(PJ1, X), PJ1 is X, write('YI').
distribuerSurPlateau(1, Case, NBGrainesCase, PJ1, PJ1, CaseArrivee, Nbr):- NBGrainesCase = 0 ,CaseArrivee is Case +1, Nbr is NBGrainesCase.
distribuerSurPlateau(1, 6, NBGrainesCase, [T|Q], [T1|Q1], CaseArrivee, NBGrainesRestantes):-    renverser([T|Q], [A|B]), 
																								T2 is A+1,
																								N is NBGrainesCase -1,
																								Case2 is 5,
																								distribuerSurPlateau(1, Case2,N, B, Q2,CaseArrivee, NBGrainesRestantes),
																								renverser([T2|Q2], [T1|Q1]). 
																								
distribuerSurPlateau(1, Case, NBGrainesCase, [A|B], [T1|Q1], CaseArrivee, NBGrainesRestantes):- 
																								T1 is A+1,
																								N is NBGrainesCase -1,
																								Case2 is Case-1,
																								distribuerSurPlateau(1, Case2, N, B, Q1, CaseArrivee, NBGrainesRestantes).

calculNombreDeGrainesRamassees(J1, Case, PJ2Avant, PJ2Fin, 7, GrainesRamassees) :- GrainesRamassees is 0, !.		
calculNombreDeGrainesRamassees(J1, Case, [T|Q], [T|Q], CaseArrivee, GrainesRamassees) :- CaseArrivee =< Case,
																						  T\=2,  T\=3,
																						GrainesRamassees is 0, !.

																			
																			
calculNombreDeGrainesRamassees(J1, Case, [T|Q], [A|B], CaseArrivee, GrainesRamassees) :- Case < CaseArrivee,
																						A is T,
																						Case2 is Case +1,
																						calculNombreDeGrainesRamassees(J1,Case2, Q, B, CaseArrivee, GrainesRamassees), !.
calculNombreDeGrainesRamassees(J1, Case, [T|Q], [A|B], CaseArrivee, GrainesRamassees) :- T>1,
																						 T<4,
																						 Case2 is Case +1,
																						 A is 0,
																						 calculNombreDeGrainesRamassees(J1,Case2, Q, B, CaseArrivee, X),
																						GrainesRamassees is T + X.
